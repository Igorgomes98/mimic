// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  id    String  @id @default(uuid())
  name  String  @unique
  users users[]
}

model companies {
  id            String          @id @default(uuid())
  name          String          @unique
  email         String          @unique
  phone         String?
  cnpj          String?         @unique
  address       String?
  is_active     Boolean         @default(true)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @default(now())
  users         users[]
  subscriptions subscriptions[]
  suppliers     suppliers[]
  products      products[]
  customers     customers[]
  sales         sales[]
  purchases     purchases[]
}

model users {
  id            String      @id @default(uuid())
  name          String
  email         String      @unique
  password_hash String
  is_active     Boolean     @default(true)
  created_at    DateTime    @default(now())
  updated_at    DateTime    @default(now())
  role_id       String
  company_id    String?
  role          roles       @relation(fields: [role_id], references: [id])
  company       companies?  @relation(fields: [company_id], references: [id])
  sales         sales[]
  purchases     purchases[]
}

model subscriptions {
  id         String    @id @default(uuid())
  company_id String
  plan_name  String
  status     String
  started_at DateTime  @default(now())
  expires_at DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  company    companies @relation(fields: [company_id], references: [id])
}

model suppliers {
  id           String      @id @default(uuid())
  company_id   String
  name         String
  email        String?
  phone        String?
  address      String?
  contact_name String?
  website      String?
  is_active    Boolean     @default(true)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @default(now())
  company      companies   @relation(fields: [company_id], references: [id])
  products     products[]
  purchases    purchases[]
}

model products {
  id             String            @id @default(uuid())
  company_id     String
  supplier_id    String?
  name           String
  description    String?
  sku            String?           @unique
  price          Decimal
  is_active      Boolean           @default(true)
  created_at     DateTime          @default(now())
  updated_at     DateTime          @default(now())
  company        companies         @relation(fields: [company_id], references: [id])
  supplier       suppliers?        @relation(fields: [supplier_id], references: [id])
  sales_items    sales_items[]
  purchase_items purchases_items[]
}

model customers {
  id         String    @id @default(uuid())
  company_id String
  name       String
  email      String?
  phone      String?
  document   String?
  address    String?
  is_active  Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  company    companies @relation(fields: [company_id], references: [id])
  sales      sales[]
}

model sales {
  id             String        @id @default(uuid())
  company_id     String
  user_id        String
  customer_id    String
  sale_date      DateTime      @default(now())
  notes          String?
  payment_method String
  created_at     DateTime      @default(now())
  updated_at     DateTime      @default(now())
  company        companies     @relation(fields: [company_id], references: [id])
  user           users         @relation(fields: [user_id], references: [id])
  customer       customers     @relation(fields: [customer_id], references: [id])
  items          sales_items[]
}

model sales_items {
  id         String   @id @default(uuid())
  sales_id   String
  product_id String
  quantity   Int
  price      Decimal
  sale       sales    @relation(fields: [sales_id], references: [id])
  product    products @relation(fields: [product_id], references: [id])
}

model purchases {
  id             String            @id @default(uuid())
  company_id     String
  user_id        String
  supplier_id    String?
  input_date     DateTime          @default(now())
  invoice_number String?
  notes          String?
  created_at     DateTime          @default(now())
  updated_at     DateTime          @default(now())
  company        companies         @relation(fields: [company_id], references: [id])
  user           users             @relation(fields: [user_id], references: [id])
  supplier       suppliers?        @relation(fields: [supplier_id], references: [id])
  items          purchases_items[]
}

model purchases_items {
  id           String    @id @default(uuid())
  purchases_id String
  product_id   String
  quantity     Int
  cost         Decimal
  purchase     purchases @relation(fields: [purchases_id], references: [id])
  product      products  @relation(fields: [product_id], references: [id])
}
